// 타입스크립트 배우기!
// 자바스크립트 기반 언어 
// 자바스크립트 버릴 시간

// 더 나은 개발 경험과 더 생산적인 개발을 원하는 JS 개발자를 위한 강의
// 타입에 익숙한 개발자를 위한 강의

// VS code + TypeScript = 최고 


// 타입스크립트는 왜 만들어졌을까 ?  >>> 타입 안전성
// 엄청난 개발자 경험을 누릴 수 있다
// 코드 버그가 엄청 줄어든다
// 런타임 에러가 줄어든다
// 생산성이 늘어난다

// 자바스크립트로 타입의 중요성을 알아보자
// 자바스크립트는 매우 유연한 언어 
// 개발자를 이해하려고 한다 / 에러를 보여주지 않는다

// 예시 1) 
// 숫자 요소가 있는 배열에 false 를 더해보자
[1, 2, 3, 4] + false >>> '1,2,3,4false'
// 배열과 boolean이 다 사라지고 문자열이 되어버림

// 예시 2)
function divide(a, b) {
    return a / b
}

divide(2, 3)
0.6666
divide("메롱")
NaN
// 이 함수는 실행되면 안된다
// 인자를 두 개 넣어주어야 하는데 하나만 입력했음
// 에러가 나지 않고 실행됨

// 왜냐면 자바스크립트는 a, b가 뭔지 몰라
// 인자들이 필수 입력값인지 선택사항인지 모른다

// 프로그래밍 언어는 우리가 컴퓨터하고 의사소통하는 방법
// divide 함수의 경우는 단순한 의사소통
// 하지만 우리는 컴퓨터에게 인자가 숫자여야된다고 설명하고 있지 않는다
// 자바스크립트는 마음대로 추측할 수 없어서 그냥 실행만 할뿐이다

// 예시 3)
// 런타임 에러 - 콘솔 안에서 일어나는 에러
const hye = { name: "hye" }
hye.hello() // 에러 발생
// 이 에러는 코드를 실행하기 전에 최소화시킬 수 있다
// 객체를 만들었고 객체에서 함수를 불러왔다
// 바스크립트는 에러가 날 거라는 걸 몰라서 그냥 코드를 실행했다 바보바보

// 이상적으로는 코드가 실행되기 전에 객체에는 함수가 없다는 것을 알려주는 것이 좋다
// 좋은 프로그래밍 언어라면 객체를 분석해서 알려준다
// 에러 코드를 작성하면 실행조차 안된다 / 에러를 고치고 나서야 보낼 수 있다

// 자바스크립트는 유저가 코드를 실행했을 때 비로소 에러가 발생한다
// 이럴 경우 코드에 어떤 에러가 있는지 다른 사람이 개발자한테 알려주게 되는 것

// 타입스크립트를 사용하면 해결할 수 있다
// 배열 + boolean 안됨
// 함수에 인자가 2개면 실행되지 않는다
// 객체에 없는 함수를 실행시키려고 하면 엔터를 누르기도 전에 오류가 발생할거라고 알려준다